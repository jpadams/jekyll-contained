on:
  [push, pull_request]

name: Build

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "$GITHUB_CONTEXT"

    - name: Checkout
      uses: actions/checkout@v1.0.0

    - name: Setup AWS
      env:
        AWS_REGION: eu-west-1
      run: |
        mkdir "${RUNNER_TEMP}/.aws"
        export AWS_CONFIG_FILE="${RUNNER_TEMP}/.aws/config"
        export AWS_SHARED_CREDENTIALS_FILE="${RUNNER_TEMP}/.aws/credentials"
        aws configure set default.region $AWS_REGION
        aws configure set default.output json
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws sts get-caller-identity
        # Login to AWS ECR
        $( aws ecr get-login --region $AWS_REGION --no-include-email )

    # - name: Build, tag, and push image
    #   run: |
    #     # Configure environment to use the runner's AWS config
    #     export AWS_CONFIG_FILE="${RUNNER_TEMP}/.aws/config"
    #     export AWS_SHARED_CREDENTIALS_FILE="${RUNNER_TEMP}/.aws/credentials"
    #     export AWS_REGION=$( aws configure get default.region )
    #     # Build and tag the image
    #     docker build \
    #       -t jekyll-contained:$GITHUB_SHA \
    #       -t $GITHUB_REPOSITORY:$GITHUB_SHA \
    #       -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/jekyll-contained:$GITHUB_SHA .
    #     # Save the image so it can be uploaded as an artifact
    #     docker save jekyll-contained:$GITHUB_SHA | gzip > ./jekyll-contained.tar.gz
    #     # Push image to AWS ECR
    #     docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/jekyll-contained:$GITHUB_SHA

    # - name: Upload artifact
    #   uses: actions/upload-artifact@v1.0.0
    #   with:
    #     name: docker-image
    #     path: ./jekyll-contained.tar.gz

    - name: Build, deploy task definition
      run: |
        # Configure environment to use the runner's AWS config
        export AWS_CONFIG_FILE="${RUNNER_TEMP}/.aws/config"
        export AWS_SHARED_CREDENTIALS_FILE="${RUNNER_TEMP}/.aws/credentials"
        export AWS_REGION=$( aws configure get default.region )
        # Update task-definition with new image
        export IMAGE=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/jekyll-contained:$GITHUB_SHA
        aws ecs describe-task-definition --task-definition ${{ secrets.AWS_ECS_TASK_DEFN_FAMILY }} \
          > "${RUNNER_TEMP}/task-definition.json"
        # Update task-definition with new image
        export IMAGE="jekyll/jekyll:latest"
        cat "${RUNNER_TEMP}/task-definition.json" | jq '.taskDefinition.containerDefinitions[0].image |= $ENV.IMAGE'

    - name: Report cluster status
      run: |
        echo TODO
